Given an array arr[] of N positive integers which can contain integers from 1 to P where elements can be repeated or can be absent from the array.
Your task is to count the frequency of all numbers from 1 to N. Make in-place changes in arr[], such that arr[i] = frequency(i). Assume 1-based indexing.
Note: The elements greater than N in the array can be ignored for counting and do modify the array in-place. 








============================================================================================================================================================





class Solution{
    
    public static void frequencyCount(int arr[], int n, int P)
    {
        // code here
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i = 0 ; i < n ; i++) {
map.put(arr[i], map.getOrDefault(arr[i], 0)+1);
}
for(int i = 0 ; i < n ; i++) {
if(map.containsKey(i+1)) {
arr[i] = map.get(i+1);
}else {
arr[i] = 0;
}
}
    }
}
