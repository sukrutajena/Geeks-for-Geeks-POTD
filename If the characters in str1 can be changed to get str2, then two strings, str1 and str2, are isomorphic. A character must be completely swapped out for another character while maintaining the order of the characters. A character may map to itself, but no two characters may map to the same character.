If the characters in str1 can be changed to get str2, then two strings, str1 and str2, are isomorphic. A character must be completely swapped out for another 
character while maintaining the order of the characters. A character may map to itself, but no two characters may map to the same character.




=================================================================================================================================================================




class Solution
{
    //Function to check if two strings are isomorphic.
    public static boolean areIsomorphic(String str1,String str2)
    {
        if(str1.length()!=str2.length()){
            return false;
        }
        HashMap <Character, Character> map = new HashMap<>();
        for(int i =0; i<str1.length(); i++){
            if(!map.containsKey(str1.charAt(i)) && !map.containsValue(str2.charAt(i))){
                map.put(str1.charAt(i), str2.charAt(i));
            }else{
                boolean ans = compare(map, str1.charAt(i), str2.charAt(i));
                if(!ans){
                    return false;
                }
            }
        }
        return true;
    }

    public static boolean compare(HashMap<Character, Character> map, char a, char b){
        if(map.containsKey(a)){
            if(map.get(a) == b){
            return true;
            }
        }
        return false;
    }
}
